group 'org.cuber'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.github.jklingsporn:vertx-jooq-generate:3.1.0"
        classpath 'org.postgresql:postgresql:42.2.2'

    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile project(":umps-rmi")
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework:spring-webmvc')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile "io.vertx:vertx-core:3.5.1"
    compile 'io.vertx:vertx-rx-java2:3.5.1'
    compile 'io.vertx:vertx-zookeeper:3.5.1'
    compile 'io.vertx:vertx-mysql-postgresql-client:3.5.1'
    compile 'org.postgresql:postgresql:42.2.2'
    compile 'io.springfox:springfox-swagger2:2.8.0'
    compile 'io.springfox:springfox-swagger-ui:2.8.0'
    compile "io.github.jklingsporn:vertx-jooq-rx-async:3.1.0"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    testCompile('org.springframework.boot:spring-boot-starter-test')

}
def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.10.0.xsd') {
    jdbc() {
        driver('org.postgresql.Driver')
        url('jdbc:postgresql://localhost:5432/upms')
        user('upms')
        password('upms')
        schema('upms')
    }
    generator() {
        name('io.github.jklingsporn.vertx.jooq.generate.VertxGenerator')
        database() {
        }
        generate([:]) {
            deprecated(false)
            records(false)
            interfaces(true)
            fluentSetters(true)
            pojos(true)
            daos(true)
        }
        target() {
            packageName('org.cuber.upms.repo')
            directory('src/main/java')
        }
        strategy {
            name('io.github.jklingsporn.vertx.jooq.generate.rx.AsyncRXVertxGeneratorStrategy')
        }
    }
}

org.jooq.util.GenerationTool.generate(
        javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
)

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
    all*.exclude module: 'log4j-over-slf4j'
    all*.exclude module: 'slf4j-log4j12'
}