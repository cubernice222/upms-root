/*
 * This file is generated by jOOQ.
*/
package org.cuber.upms.repo.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.cuber.upms.repo.Indexes;
import org.cuber.upms.repo.Keys;
import org.cuber.upms.repo.Upms;
import org.cuber.upms.repo.tables.records.TRcUserRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRcUser extends TableImpl<TRcUserRecord> {

    private static final long serialVersionUID = 490578314;

    /**
     * The reference instance of <code>upms.t_rc_user</code>
     */
    public static final TRcUser T_RC_USER = new TRcUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRcUserRecord> getRecordType() {
        return TRcUserRecord.class;
    }

    /**
     * The column <code>upms.t_rc_user.user_id</code>.
     */
    public final TableField<TRcUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('t_rc_user_user_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>upms.t_rc_user.avatar</code>. 头像url
     */
    public final TableField<TRcUserRecord, String> AVATAR = createField("avatar", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "头像url");

    /**
     * The column <code>upms.t_rc_user.user_name</code>. 登录名称
     */
    public final TableField<TRcUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "登录名称");

    /**
     * The column <code>upms.t_rc_user.password</code>. 登录密码
     */
    public final TableField<TRcUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(2048), this, "登录密码");

    /**
     * The column <code>upms.t_rc_user.salt</code>. 加密 salt
     */
    public final TableField<TRcUserRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "加密 salt");

    /**
     * The column <code>upms.t_rc_user.full_name</code>. 名称
     */
    public final TableField<TRcUserRecord, String> FULL_NAME = createField("full_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "名称");

    /**
     * The column <code>upms.t_rc_user.birthday</code>. 生日
     */
    public final TableField<TRcUserRecord, LocalDateTime> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "生日");

    /**
     * The column <code>upms.t_rc_user.user_scope</code>. 用户系统
     */
    public final TableField<TRcUserRecord, String> USER_SCOPE = createField("user_scope", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户系统");

    /**
     * The column <code>upms.t_rc_user.sex</code>. 性别
     */
    public final TableField<TRcUserRecord, String> SEX = createField("sex", org.jooq.impl.SQLDataType.VARCHAR(64), this, "性别");

    /**
     * The column <code>upms.t_rc_user.email</code>. 邮箱
     */
    public final TableField<TRcUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "邮箱");

    /**
     * The column <code>upms.t_rc_user.phone</code>. 电话
     */
    public final TableField<TRcUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "电话");

    /**
     * The column <code>upms.t_rc_user.ding_user_id</code>. 钉钉用户ID
     */
    public final TableField<TRcUserRecord, String> DING_USER_ID = createField("ding_user_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "钉钉用户ID");

    /**
     * The column <code>upms.t_rc_user.wechat_user_id</code>. 微信用户ID
     */
    public final TableField<TRcUserRecord, String> WECHAT_USER_ID = createField("wechat_user_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "微信用户ID");

    /**
     * The column <code>upms.t_rc_user.corp_number</code>. 员工号
     */
    public final TableField<TRcUserRecord, String> CORP_NUMBER = createField("corp_number", org.jooq.impl.SQLDataType.VARCHAR(64), this, "员工号");

    /**
     * The column <code>upms.t_rc_user.status</code>. 0 未激活 1 正常 2.离职  3.退休
     */
    public final TableField<TRcUserRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(2), this, "0 未激活 1 正常 2.离职  3.退休");

    /**
     * The column <code>upms.t_rc_user.operator</code>.
     */
    public final TableField<TRcUserRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>upms.t_rc_user.update_time</code>.
     */
    public final TableField<TRcUserRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>upms.t_rc_user.create_time</code>.
     */
    public final TableField<TRcUserRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>upms.t_rc_user</code> table reference
     */
    public TRcUser() {
        this(DSL.name("t_rc_user"), null);
    }

    /**
     * Create an aliased <code>upms.t_rc_user</code> table reference
     */
    public TRcUser(String alias) {
        this(DSL.name(alias), T_RC_USER);
    }

    /**
     * Create an aliased <code>upms.t_rc_user</code> table reference
     */
    public TRcUser(Name alias) {
        this(alias, T_RC_USER);
    }

    private TRcUser(Name alias, Table<TRcUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRcUser(Name alias, Table<TRcUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Upms.UPMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_UNQ_RC_USER_USERNAME, Indexes.T_RC_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRcUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_RC_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRcUserRecord> getPrimaryKey() {
        return Keys.T_RC_USER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRcUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TRcUserRecord>>asList(Keys.T_RC_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRcUser as(String alias) {
        return new TRcUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRcUser as(Name alias) {
        return new TRcUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRcUser rename(String name) {
        return new TRcUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRcUser rename(Name name) {
        return new TRcUser(name, null);
    }
}
