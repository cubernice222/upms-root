/*
 * This file is generated by jOOQ.
*/
package org.cuber.upms.repo.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITRcUser extends VertxPojo, Serializable {

    /**
     * Setter for <code>upms.t_rc_user.user_id</code>.
     */
    public ITRcUser setUserId(Integer value);

    /**
     * Getter for <code>upms.t_rc_user.user_id</code>.
     */
    public Integer getUserId();

    /**
     * Setter for <code>upms.t_rc_user.avatar</code>. 头像url
     */
    public ITRcUser setAvatar(String value);

    /**
     * Getter for <code>upms.t_rc_user.avatar</code>. 头像url
     */
    public String getAvatar();

    /**
     * Setter for <code>upms.t_rc_user.user_name</code>. 登录名称
     */
    public ITRcUser setUserName(String value);

    /**
     * Getter for <code>upms.t_rc_user.user_name</code>. 登录名称
     */
    public String getUserName();

    /**
     * Setter for <code>upms.t_rc_user.password</code>. 登录密码
     */
    public ITRcUser setPassword(String value);

    /**
     * Getter for <code>upms.t_rc_user.password</code>. 登录密码
     */
    public String getPassword();

    /**
     * Setter for <code>upms.t_rc_user.salt</code>. 加密 salt
     */
    public ITRcUser setSalt(String value);

    /**
     * Getter for <code>upms.t_rc_user.salt</code>. 加密 salt
     */
    public String getSalt();

    /**
     * Setter for <code>upms.t_rc_user.full_name</code>. 名称
     */
    public ITRcUser setFullName(String value);

    /**
     * Getter for <code>upms.t_rc_user.full_name</code>. 名称
     */
    public String getFullName();

    /**
     * Setter for <code>upms.t_rc_user.birthday</code>. 生日
     */
    public ITRcUser setBirthday(LocalDateTime value);

    /**
     * Getter for <code>upms.t_rc_user.birthday</code>. 生日
     */
    public LocalDateTime getBirthday();

    /**
     * Setter for <code>upms.t_rc_user.user_scope</code>. 用户系统
     */
    public ITRcUser setUserScope(String value);

    /**
     * Getter for <code>upms.t_rc_user.user_scope</code>. 用户系统
     */
    public String getUserScope();

    /**
     * Setter for <code>upms.t_rc_user.sex</code>. 性别
     */
    public ITRcUser setSex(String value);

    /**
     * Getter for <code>upms.t_rc_user.sex</code>. 性别
     */
    public String getSex();

    /**
     * Setter for <code>upms.t_rc_user.email</code>. 邮箱
     */
    public ITRcUser setEmail(String value);

    /**
     * Getter for <code>upms.t_rc_user.email</code>. 邮箱
     */
    public String getEmail();

    /**
     * Setter for <code>upms.t_rc_user.phone</code>. 电话
     */
    public ITRcUser setPhone(String value);

    /**
     * Getter for <code>upms.t_rc_user.phone</code>. 电话
     */
    public String getPhone();

    /**
     * Setter for <code>upms.t_rc_user.ding_user_id</code>. 钉钉用户ID
     */
    public ITRcUser setDingUserId(String value);

    /**
     * Getter for <code>upms.t_rc_user.ding_user_id</code>. 钉钉用户ID
     */
    public String getDingUserId();

    /**
     * Setter for <code>upms.t_rc_user.wechat_user_id</code>. 微信用户ID
     */
    public ITRcUser setWechatUserId(String value);

    /**
     * Getter for <code>upms.t_rc_user.wechat_user_id</code>. 微信用户ID
     */
    public String getWechatUserId();

    /**
     * Setter for <code>upms.t_rc_user.corp_number</code>. 员工号
     */
    public ITRcUser setCorpNumber(String value);

    /**
     * Getter for <code>upms.t_rc_user.corp_number</code>. 员工号
     */
    public String getCorpNumber();

    /**
     * Setter for <code>upms.t_rc_user.status</code>. 0 未激活 1 正常 2.离职  3.退休
     */
    public ITRcUser setStatus(String value);

    /**
     * Getter for <code>upms.t_rc_user.status</code>. 0 未激活 1 正常 2.离职  3.退休
     */
    public String getStatus();

    /**
     * Setter for <code>upms.t_rc_user.operator</code>.
     */
    public ITRcUser setOperator(String value);

    /**
     * Getter for <code>upms.t_rc_user.operator</code>.
     */
    public String getOperator();

    /**
     * Setter for <code>upms.t_rc_user.update_time</code>.
     */
    public ITRcUser setUpdateTime(LocalDateTime value);

    /**
     * Getter for <code>upms.t_rc_user.update_time</code>.
     */
    public LocalDateTime getUpdateTime();

    /**
     * Setter for <code>upms.t_rc_user.create_time</code>.
     */
    public ITRcUser setCreateTime(LocalDateTime value);

    /**
     * Getter for <code>upms.t_rc_user.create_time</code>.
     */
    public LocalDateTime getCreateTime();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ITRcUser
     */
    public void from(org.cuber.upms.repo.tables.interfaces.ITRcUser from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ITRcUser
     */
    public <E extends org.cuber.upms.repo.tables.interfaces.ITRcUser> E into(E into);

    @Override
    public default ITRcUser fromJson(io.vertx.core.json.JsonObject json) {
        setUserId(json.getInteger("user_id"));
        setAvatar(json.getString("avatar"));
        setUserName(json.getString("user_name"));
        setPassword(json.getString("password"));
        setSalt(json.getString("salt"));
        setFullName(json.getString("full_name"));
        // Omitting unrecognized type java.time.LocalDateTime for column birthday!
        setUserScope(json.getString("user_scope"));
        setSex(json.getString("sex"));
        setEmail(json.getString("email"));
        setPhone(json.getString("phone"));
        setDingUserId(json.getString("ding_user_id"));
        setWechatUserId(json.getString("wechat_user_id"));
        setCorpNumber(json.getString("corp_number"));
        setStatus(json.getString("status"));
        setOperator(json.getString("operator"));
        // Omitting unrecognized type java.time.LocalDateTime for column update_time!
        // Omitting unrecognized type java.time.LocalDateTime for column create_time!
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("user_id",getUserId());
        json.put("avatar",getAvatar());
        json.put("user_name",getUserName());
        json.put("password",getPassword());
        json.put("salt",getSalt());
        json.put("full_name",getFullName());
        // Omitting unrecognized type java.time.LocalDateTime for column birthday!
        json.put("user_scope",getUserScope());
        json.put("sex",getSex());
        json.put("email",getEmail());
        json.put("phone",getPhone());
        json.put("ding_user_id",getDingUserId());
        json.put("wechat_user_id",getWechatUserId());
        json.put("corp_number",getCorpNumber());
        json.put("status",getStatus());
        json.put("operator",getOperator());
        // Omitting unrecognized type java.time.LocalDateTime for column update_time!
        // Omitting unrecognized type java.time.LocalDateTime for column create_time!
        return json;
    }

}
