/*
 * This file is generated by jOOQ.
*/
package org.cuber.upms.repo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.cuber.upms.repo.Indexes;
import org.cuber.upms.repo.Keys;
import org.cuber.upms.repo.Upms;
import org.cuber.upms.repo.tables.records.TRcDeptRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRcDept extends TableImpl<TRcDeptRecord> {

    private static final long serialVersionUID = 438154068;

    /**
     * The reference instance of <code>upms.t_rc_dept</code>
     */
    public static final TRcDept T_RC_DEPT = new TRcDept();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRcDeptRecord> getRecordType() {
        return TRcDeptRecord.class;
    }

    /**
     * The column <code>upms.t_rc_dept.dept_id</code>.
     */
    public final TableField<TRcDeptRecord, Integer> DEPT_ID = createField("dept_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('t_rc_dept_dept_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>upms.t_rc_dept.simple_name</code>. 部门简称
     */
    public final TableField<TRcDeptRecord, String> SIMPLE_NAME = createField("simple_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "部门简称");

    /**
     * The column <code>upms.t_rc_dept.full_name</code>. 部门全称
     */
    public final TableField<TRcDeptRecord, String> FULL_NAME = createField("full_name", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "部门全称");

    /**
     * The column <code>upms.t_rc_dept.tips</code>.
     */
    public final TableField<TRcDeptRecord, String> TIPS = createField("tips", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>upms.t_rc_dept.p_dept_id</code>. 父部门ID
     */
    public final TableField<TRcDeptRecord, Integer> P_DEPT_ID = createField("p_dept_id", org.jooq.impl.SQLDataType.INTEGER, this, "父部门ID");

    /**
     * The column <code>upms.t_rc_dept.status</code>.
     */
    public final TableField<TRcDeptRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>upms.t_rc_dept.operator</code>.
     */
    public final TableField<TRcDeptRecord, String> OPERATOR = createField("operator", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>upms.t_rc_dept.update_time</code>.
     */
    public final TableField<TRcDeptRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>upms.t_rc_dept.create_time</code>.
     */
    public final TableField<TRcDeptRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>upms.t_rc_dept</code> table reference
     */
    public TRcDept() {
        this(DSL.name("t_rc_dept"), null);
    }

    /**
     * Create an aliased <code>upms.t_rc_dept</code> table reference
     */
    public TRcDept(String alias) {
        this(DSL.name(alias), T_RC_DEPT);
    }

    /**
     * Create an aliased <code>upms.t_rc_dept</code> table reference
     */
    public TRcDept(Name alias) {
        this(alias, T_RC_DEPT);
    }

    private TRcDept(Name alias, Table<TRcDeptRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRcDept(Name alias, Table<TRcDeptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Upms.UPMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_RC_DEPT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRcDeptRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_RC_DEPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRcDeptRecord> getPrimaryKey() {
        return Keys.T_RC_DEPT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRcDeptRecord>> getKeys() {
        return Arrays.<UniqueKey<TRcDeptRecord>>asList(Keys.T_RC_DEPT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRcDept as(String alias) {
        return new TRcDept(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRcDept as(Name alias) {
        return new TRcDept(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRcDept rename(String name) {
        return new TRcDept(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRcDept rename(Name name) {
        return new TRcDept(name, null);
    }
}
